(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["GettingStarted"],{"473a":function(e,t,n){},"97d5":function(e,t,n){"use strict";n("473a")},e575:function(e,t,n){"use strict";n.r(t);var o=n("4430"),a=Object(o["I"])("data-v-186f88de");Object(o["w"])("data-v-186f88de");var r={class:"page-view"},d={class:"panel"},l=Object(o["f"])('<div class="panel-desc" data-v-186f88de><p class="pg" data-v-186f88de><a href="https://www.google.com/search?q=COMPARISON+TABLE&amp;safe=off&amp;rlz=1C5CHFA_enKR901KR901&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ved=2ahUKEwji6IblncLrAhW5xosBHTLFAuQQ_AUoAXoECA0QAw&amp;biw=1771&amp;bih=852" target="_blank" data-v-186f88de>comparison table</a> 형식의 테이블 구현시 열(column)을 한 개의 컴포넌트 단위로 만들어내기 위해 제작 되었습니다. </p><p class="pg" data-v-186f88de><em data-v-186f88de>JdColrowProvider</em>는 한 개의 테이블, <em data-v-186f88de>JdColrowRow</em>는 한 개의 행이라 생각하면 됩니다. </p><ul class="panel-list" data-v-186f88de><li data-v-186f88de><em data-v-186f88de>동일한 groupKey</em>를 가진 row의 높이를 맞춥니다.</li></ul></div>',1);Object(o["u"])();var s=a((function(e,t,n,a,s,i){var c=Object(o["B"])("demo-preview-code"),m=Object(o["B"])("demo-panel-devider");return Object(o["t"])(),Object(o["d"])("div",r,[Object(o["h"])("div",d,[Object(o["h"])(c,e.Codes.install,null,16),Object(o["h"])(m),Object(o["h"])(c,e.Codes.simple,null,16),Object(o["h"])(m,{half:!0}),l,Object(o["h"])(m),Object(o["h"])(c,e.Codes.sample,null,16)])])})),i={install:{title:"package install",description:"",lang:"bash",code:"$ npm install @jood/v-colrow\n# or $ yarn add @jood/v-colrow"},sample:{title:"Sample.vue",description:"",lang:"html",code:'\n<template>\n  <div>\n    <jd-colrow-provider class="my-table">\n      <div v-for="(item, index) in testState.list" :key="index" class="my-item">\n        <jd-colrow-row v-for="(value, key) in item" :key="key" :groupKey="key" class="my-row">\n          <template v-slot="{ state }">\n            <div class="test-state">{{ state }}</div>\n            <div class="test-value">{{ value }}</div>\n          </template>\n        </jd-colrow-row>\n      </div>\n    </jd-colrow-provider>\n  </div>\n</template>\n\n<script lang="ts">\nimport { defineComponent, reactive, onUnmounted } from \'vue\';\nimport { JdColrowProvider, JdColrowRow } from \'@jood/v-colrow\';\n\nexport default defineComponent({\n  components: {\n    JdColrowProvider,\n    JdColrowRow\n  },\n  setup() {\n    const testMax = 3;\n    const testState = reactive<any>({\n      list: []\n    });\n    const getTestRandomText = () => {\n      const date = new Date();\n      const len = Math.round(Math.random() * 10 + 1);\n      const text = [];\n      for (let i = 0; i < len; i++) {\n        text.push(Math.ceil(Math.random() * 99999999).toString());\n        text.push(Math.ceil(Math.random() * 99999999).toString());\n        text.push(Math.ceil(Math.random() * 99999999).toString());\n        text.push(Math.ceil(Math.random() * 99999999).toString());\n        text.push(Math.ceil(Math.random() * 99999999).toString());\n      }\n      return text.join(\'\');\n    };\n    const onChangeState = () => {\n      testState.list = [];\n      for (let i = 0; i < testMax; i++) {\n        testState.list.push({\n          key1: getTestRandomText(),\n          key2: getTestRandomText(),\n          key3: getTestRandomText()\n        });\n      }\n    };\n    const testInterval = setInterval(() => {\n      onChangeState();\n    }, 1000);\n    onUnmounted(() => {\n      clearInterval(testInterval);\n    });\n    return {\n      testState\n    };\n  }\n});\n<\/script>\n\n<style lang="scss" scoped>\n.my-table {\n  display: flex;\n  margin: 0 auto;\n  max-width: 90%;\n  border: 1px solid #ff0000;\n  border-radius: 5px;\n}\n.my-item {\n  flex: 1;\n  border-left: 1px dashed #ff0000;\n  &:first-child {\n    border-left-width: 0;\n  }\n  .my-row {\n    word-break: break-all;\n    border-top: 1px solid #ff0000;\n    transition: height 200ms;\n    overflow: hidden;\n    &:first-child {\n      border-top-width: 0;\n    }\n  }\n  .test-state {\n    padding: 10px;\n  }\n  .test-value {\n    padding: 10px;\n    color: #999999;\n  }\n}\n</style>\n    '},simple:{title:"simple use",description:"",lang:"html",code:'\n<template>\n  <jd-colrow-provider>\n    <div class="my-item">\n      <jd-colrow-row groupKey="title" class="my-row">{{ item[0].title }}</jd-colrow-row>\n      <jd-colrow-row groupKey="desc" class="my-row">{{ item[0].desc }}</jd-colrow-row>\n      <jd-colrow-row groupKey="name" class="my-row">{{ item[0].name }}</jd-colrow-row>\n    </div>\n    <div class="my-item">\n      <jd-colrow-row groupKey="title" class="my-row">{{ item[1].title }}</jd-colrow-row>\n      <jd-colrow-row groupKey="desc" class="my-row">{{ item[1].desc }}</jd-colrow-row>\n      <jd-colrow-row groupKey="name" class="my-row">{{ item[1].name }}</jd-colrow-row> \n    </div>\n  </jd-colrow-provider>\n</template>\n'}},c=Object(o["j"])({setup:function(){return{Codes:i}}});n("97d5");c.render=s,c.__scopeId="data-v-186f88de";t["default"]=c}}]);